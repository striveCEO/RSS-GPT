<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
<title>Cryptology ePrint Archive</title>
<link>https://eprint.iacr.org/rss/rss.xml</link>


<item>
<title>A Two-Layer Blockchain Sharding Protocol Leveraging Safety and Liveness for Enhanced Performance</title>
<link>https://eprint.iacr.org/2024/304</link>
<guid>https://eprint.iacr.org/2024/304</guid>
<content:encoded><![CDATA[
<div> 关键词：Reticulum, sharding, blockchain, scalability, adversarial nodes

总结: <br />
Reticulum是一种创新的分片协议，旨在解决区块链网络中的可扩展性和安全性问题。它采用两阶段设计，分为控制和处理分片，以应对不同类型的攻击。控制分片确保网络的多数诚实节点，而处理分片负责交易处理，通过一致同意减少参与验证的节点，实现高吞吐量。在出现争议时，控制分片作为仲裁者。实验表明，Reticulum在保持高交易速度的同时，具有更强的抗攻击性，相较于现有协议更具优势。 <div>
Sharding is a critical technique that enhances the scalability of blockchain technology. However, existing protocols often assume adversarial nodes in a general term without considering the different types of attacks, which limits transaction throughput at runtime because attacks on liveness could be mitigated. There have been attempts to increase transaction throughput by separately handling the attacks; however, they have security vulnerabilities. This paper introduces Reticulum, a novel sharding protocol that overcomes these limitations and achieves enhanced scalability in a blockchain network without security vulnerabilities.

Reticulum employs a two-phase design that dynamically adjusts transaction throughput based on runtime adversarial attacks on either or both liveness and safety. It consists of `control' and `process' shards in two layers corresponding to the two phases. Process shards are subsets of control shards, with each process shard expected to contain at least one honest node with high confidence. Conversely, control shards are expected to have a majority of honest nodes with high confidence. Reticulum leverages unanimous voting in the first phase to involve fewer nodes in accepting/rejecting a block, allowing more parallel process shards. The control shard finalizes the decision made in the first phase and serves as a lifeline to resolve disputes when they surface.

Experiments demonstrate that the unique design of Reticulum empowers high transaction throughput and robustness in the face of different types of attacks in the network, making it superior to existing sharding protocols for blockchain networks.
]]></content:encoded>
<pubDate>Fri, 23 Feb 2024 00:13:18 +0000</pubDate>
</item>
<item>
<title>Adaptor Signatures: New Security Definition and A Generic Construction for NP Relations</title>
<link>https://eprint.iacr.org/2024/1051</link>
<guid>https://eprint.iacr.org/2024/1051</guid>
<content:encoded><![CDATA[
<div> 关键词：Adaptor Signatures (AS), Witness Hiding, NP relation, One-way Functions, Trapdoor Commitments.

总结:
本文主要探讨了适应性签名(Adaptor Signatures, AS)及其增强的安全特性——隐藏见证。AS最初允许签名者为硬关系实例生成预签名，但早期构造存在缺陷，预签名关联的见证会暴露。为解决这个问题，作者提出了一种新的定义，即“见证隐藏”，并证明在仅依赖单向函数假设下，可以构建AS，满足这一安全属性。文章还提出了一种基于签名和弱型陷阱门承诺（特定可适应消息的陷阱门承诺）的通用构造，通过实例化基于汉密尔顿回路问题，扩展到任何NP关系。这一工作为AS的应用，特别是在区块链等场景，提供了更安全的解决方案。 <div>
An adaptor signatures (AS) scheme is an extension of digital signatures that allows the signer to generate a pre-signature for an instance of a hard relation. This pre-signature can later be adapted to a full signature with a corresponding witness. Meanwhile, the signer can extract a witness from both the pre-signature and the signature. AS have recently garnered more attention due to its scalability and interoperability. Dai et al. [INDOCRYPT 2022] proved that AS can be constructed for any NP relation using a generic construction. However, their construction has a shortcoming: the associated witness is exposed by the adapted signature. This flaw poses limits the applications of AS, even in its motivating setting, i.e., blockchain, where the adapted signature is typically uploaded to the blockchain and is public to everyone.

To address this issue, in this work we augment the security definition of AS by a natural property which we call witness hiding. We then prove the existence of AS for any NP relation, assuming the existence of one-way functions. Concretely, we propose a generic construction of witness-hiding AS from signatures and a weak variant of trapdoor commitments, which we term trapdoor commitments with a specific adaptable message. We instantiate the latter based on the Hamiltonian cycle problem. Since the Hamiltonian cycle problem is NP-complete, we can obtain witness hiding adaptor signatures for any NP relation.
]]></content:encoded>
<pubDate>Fri, 28 Jun 2024 04:12:15 +0000</pubDate>
</item>
<item>
<title>On Sequential Functions and Fine-Grained Cryptography</title>
<link>https://eprint.iacr.org/2024/1050</link>
<guid>https://eprint.iacr.org/2024/1050</guid>
<content:encoded><![CDATA[
<div> 关键词：sequential functions, one-way functions, oracle separation, continuous iterative sequential functions (CISF), fine-grained cryptography

总结:<br />
这篇文章主要探讨了序列函数（sequential functions）的理论复杂性和其与单向函数的关系。作者展示了存在一个黑盒Oracle，它能证明序列函数的存在但不能证明单向函数的存在，这与通常的构造方式形成对比。文章还深入研究了连续迭代序列函数（CISF）的决策性最坏情况问题，证明其是PSPACE-完全的。此外，通过仅假设非单向CISF，构建了“细粒度”加密和MAC等安全协议。最后，文中定义了称为交换式序列函数的新概念，它可用于实现细粒度密钥交换。这些结果揭示了序列函数在密码学中的潜在应用，即使在不依赖单向函数的情况下。 <div>
A sequential function is, informally speaking, a function $f$ for which a massively parallel adversary cannot compute "substantially" faster than an honest user with limited parallel computation power. Sequential functions form the backbone of many primitives that are extensively used in blockchains such as verifiable delay functions (VDFs) and time-lock puzzles. Despite this widespread practical use, there has been little work studying the complexity or theory of sequential functions.

Our main result is a black-box oracle separation between sequential functions and one-way functions: in particular, we show the existence of an oracle $\mathcal{O}$ that implies a sequential function but not a one-way function. This seems surprising since sequential functions are typically constructed from very strong assumptions that imply one-way functions and also since time-lock puzzles are known to imply one-way functions (Bitansky et al., ITCS '16).

We continue our exploration of the theory of sequential functions. We show that, informally speaking, the decisional, worst-case variant of a certain class of sequential function called a continuous iterative sequential function (CISF) is PSPACE-complete. A CISF is, in a nutshell, a sequential function $f$ that can be written in the form $f \left(k, x \right) = g^{k} \left(x \right)$ for some function $g$ where $k$ is an input determining the number of "rounds" the function is evaluated. We then show that more general forms of sequential functions are not contained in PSPACE relative to a random oracle.

Given these results, we then ask if it is possible to build any interesting cryptographic primitives from sequential functions that are not one-way. It turns out that even if we assume just the existence of a CISF that is not one-way, we can build certain "fine-grained" cryptographic primitives where security is defined similarly to traditional primitives with the exception that it is only guaranteed for some (generally polynomial) amount of time. In particular, we show how to build "fine-grained" symmetric key encryption and "fine-grained" MACs from a CISF. We also show how to build fine-grained public-key encryption from a VDF with a few extra natural properties and indistinguishability obfucsation (iO) for null circuits. We do not assume one-way functions. Finally, we define a primitive that we call a commutative sequential function - essentially a sequential function that can be computed in sequence to get the same output in two different ways - and show that it implies fine-grained key exchange.
]]></content:encoded>
<pubDate>Fri, 28 Jun 2024 03:36:20 +0000</pubDate>
</item>
<item>
<title>Byzantine Fault Tolerance with Non-Determinism, Revisited</title>
<link>https://eprint.iacr.org/2024/134</link>
<guid>https://eprint.iacr.org/2024/134</guid>
<content:encoded><![CDATA[
The conventional Byzantine fault tolerance (BFT) paradigm requires replicated state machines to execute deterministic operations only. In practice, numerous applications and scenarios, especially in the era of blockchains, contain various sources of non-determinism. Despite decades of research on BFT, we still lack an efficient and easy-to-deploy solution for BFT with non-determinism—BFT-ND, especially in the asynchronous setting.
We revisit the problem of BFT-ND and provide a formal and asynchronous treatment of BFT-ND. In particular, we design and implement Block-ND that insightfully separates the task of agreeing on the order of transactions from the task of agreement on the state: Block-ND allows reusing existing BFT implementations; on top of BFT, we reduce the agreement on the state to multivalued Byzantine agreement (MBA), a somewhat neglected primitive by practical systems. Block-ND is completely asynchronous as long as the underlying BFT is asynchronous.
We provide a new MBA construction significantly faster than existing MBA constructions. We instantiate Block-ND in both the partially synchronous setting (with PBFT, OSDI 1999) and the purely asynchronous setting (with PACE, CCS 2022). Via a 91-instance WAN deployment on Amazon EC2, we show that Block-ND has only marginal performance degradation compared to conventional BFT.
]]></content:encoded>
<pubDate>Wed, 31 Jan 2024 03:06:58 +0000</pubDate>
</item>
<item>
<title>Nakamoto Consensus under Bounded Processing Capacity</title>
<link>https://eprint.iacr.org/2023/381</link>
<guid>https://eprint.iacr.org/2023/381</guid>
<content:encoded><![CDATA[
For Nakamoto's longest-chain consensus protocol, whose proof-of-work (PoW) and proof-of-stake (PoS) variants power major blockchains such as Bitcoin and Cardano, we revisit the classic problem of the security--performance tradeoff: Given a network of nodes with finite communication- and computation-resources, against what fraction of adversary power is Nakamoto consensus (NC) secure for a given block production rate? State-of-the-art analyses of NC fail to answer this question, because their bounded-delay model does not capture the rate limits to nodes' processing of blocks, which cause congestion when blocks are released in quick succession. We develop a new analysis technique to prove a refined security--performance tradeoff for PoW NC in a bounded-capacity model. In this model, we show that, in contrast to the classic bounded-delay model, Nakamoto's private attack is no longer the worst attack, and a new attack we call the teasing strategy, that exploits congestion, is strictly worse. In PoS, equivocating blocks can exacerbate congestion, making traditional PoS NC insecure except at very low block production rates. To counter such equivocation spamming, we present a variant of PoS NC we call Blanking NC (BlaNC), which achieves the same resilience as PoW NC.
]]></content:encoded>
<pubDate>Thu, 16 Mar 2023 06:26:28 +0000</pubDate>
</item>
<item>
<title>Security-Performance Tradeoff in DAG-based Proof-of-Work Blockchain Protocols</title>
<link>https://eprint.iacr.org/2023/1089</link>
<guid>https://eprint.iacr.org/2023/1089</guid>
<content:encoded><![CDATA[
Proof-of-work (PoW) blockchain protocols based on directed acyclic graphs (DAGs) have demonstrated superior transaction confirmation performance compared to their chain-based predecessors. However, it is uncertain whether their security deteriorates in high-throughput settings similar to their predecessors, because their acceptance of simultaneous blocks and complex block dependencies presents challenges for rigorous security analysis.

We address these challenges by analyzing DAG-based protocols via a congestible blockchain model (CBM), a general model that allows case-by-case upper bounds on the block propagation delay, rather than a uniform upper bound as in most previous analyses. CBM allows us to capture two key phenomena of high-throughput settings: (1) simultaneous blocks increase each other's propagation delay, and (2) a block can be processed only after receiving all the blocks it refers to. We further devise a reasonable adversarial block propagation strategy in CBM, called the late-predecessor attack, which exploits block dependencies to delay the processing of honest blocks. We then evaluate the security and performance of Prism and OHIE, two DAG-based protocols that aim to break the security-performance tradeoff, in the presence of an attacker capable of launching the late predecessor attack. Our results show that these protocols suffer from reduced security and extended latency in high-throughput settings similar to their chain-based predecessors.
]]></content:encoded>
<pubDate>Thu, 13 Jul 2023 04:05:02 +0000</pubDate>
</item>
<item>
<title>Competitive Policies for Online Collateral Maintenance</title>
<link>https://eprint.iacr.org/2024/1022</link>
<guid>https://eprint.iacr.org/2024/1022</guid>
<content:encoded><![CDATA[
Layer-two blockchain protocols emerged to address scalability issues related to fees, storage cost, and confirmation delay of on-chain transactions. They aggregate off-chain transactions into a fewer on-chain ones, thus offering immediate settlement and reduced transaction fees. To preserve security of the underlying ledger, layer-two protocols often work in a collateralized model; resources are committed on-chain to backup off-chain activities. A fundamental challenge that arises in this setup is determining a policy for establishing, committing, and replenishing the collateral in a way that maximizes the value of settled transactions.

In this paper, we study this problem under two settings that model collateralized layer-two protocols. The first is a general model in which a party has an on-chain collateral $C$ with a policy to decide on whether to settle or discard each incoming transaction. The policy also specifies when to replenish $C$ based on the remaining collateral value. The second model considers a discrete setup in which $C$ is divided among $k$ wallets, each of which is of size $C/k$, such that when a wallet is full, and so cannot settle any incoming transactions, it will be replenished. We devise several online policies for these models, and show how competitive they are compared to optimal (offline) policies that have full knowledge of the incoming transaction stream. To the best of our knowledge, we are the first to study and formulate online competitive policies for collateral and wallet management in the blockchain setting.
]]></content:encoded>
<pubDate>Mon, 24 Jun 2024 20:06:41 +0000</pubDate>
</item>
<item>
<title>ammBoost: State Growth Control for AMMs</title>
<link>https://eprint.iacr.org/2024/1021</link>
<guid>https://eprint.iacr.org/2024/1021</guid>
<content:encoded><![CDATA[
Automated market makers (AMMs) are a form of decentralized cryptocurrency exchanges and considered a prime example of Decentralized Finance (DeFi) applications. Their popularity and high trading activity have resulted in millions of on-chain transactions leading to serious scalability issues. In this paper, we address the on-chain storage overhead problem of AMMs by utilizing a new sidechain architecture as a layer 2 solution, building a system called ammBoost. Our system reduces the amount of on-chain transactions, boosts throughput, and supports blockchain pruning. We devise several techniques to enable layer 2 processing for AMMs while preserving correctness and security of the underlying AMM. We also build a proof-of-concept of ammBoost for a Uniswap-inspired use case to empirically evaluate its performance. Our experiments show that ammBoost decreases the gas cost by 94.53% and the chain growth by at least 80%, and that it can support up to 500x of the daily traffic volume observed for Uniswap in practice.
]]></content:encoded>
<pubDate>Mon, 24 Jun 2024 19:20:08 +0000</pubDate>
</item>
<item>
<title>chainBoost: A Secure Performance Booster for Blockchain-based Resource Markets</title>
<link>https://eprint.iacr.org/2024/1020</link>
<guid>https://eprint.iacr.org/2024/1020</guid>
<content:encoded><![CDATA[
Cryptocurrencies and blockchain technology provide an innovative model for reshaping digital services. Driven by the movement toward Web 3.0, recent systems started to provide distributed services, such as computation outsourcing or file storage, on top of the currency exchange medium. By allowing anyone to join and collect cryptocurrency payments for serving others, these systems create decentralized markets for trading digital resources. Yet, there is still a big gap between the promise of these markets and their practical viability. Existing initiatives are still early-stage and have already encountered security and efficiency obstacles. At the same time, existing work around promising ideas, specifically sidechains, fall short in exploiting their full potential in addressing these problems.

To bridge this gap, we propose chainBoost, a secure performance booster for decentralized resource markets. It expedites service related operations, reduces the blockchain size, and supports flexible service-payment exchange modalities at low overhead. At its core, chainBoost employs a sidechain, that has a (security and semantic) mutual-dependence with the mainchain, to which the system offloads heavy/frequent operations. To enable it, we develop a novel sidechain architecture composed of temporary and permanent blocks, a block suppression mechanism to prune the sidechain, a syncing protocol to permit arbitrary data exchange between the two chains, and an autorecovery protocol to support robustness and resilience. We analyze the security of chainBoost, and implement a proof-of-concept prototype for a distributed file storage market as a use case. For a market handling around 2000 transactions per round, our experiments show up to 11x improvement in throughput and 94% reduction in confirmation time. They also show that chainBoost can reduce the main blockchain size by about 90%, and that it outperforms comparable optimistic rollup solutions by reducing transaction finality by 99.7%.
]]></content:encoded>
<pubDate>Mon, 24 Jun 2024 19:14:14 +0000</pubDate>
</item>
</channel>
</rss>